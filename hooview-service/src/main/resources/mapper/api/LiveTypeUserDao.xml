<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hooview.api.dao.LiveTypeUserDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.hooview.api.entity.LiveTypeUserEntity" id="liveTypeUserMap">
        <result property="id" column="id"/>
        <result property="userid" column="userId"/>
        <result property="liveTypeId" column="live_type_id"/>
    </resultMap>

    <select id="queryObject" resultType="com.hooview.api.entity.LiveTypeUserEntity">
        select * from tb_live_type_user where id = #{value}
    </select>

    <select id="queryList" resultType="com.hooview.api.entity.LiveTypeUserEntity">
        select * from tb_live_type_user
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from tb_live_type_user
    </select>

    <insert id="save" parameterType="com.hooview.api.entity.LiveTypeUserEntity" useGeneratedKeys="true" keyProperty="id">
        insert into tb_live_type_user
        (
        `user_id`,
        `live_type_id`
        )
        values
        (
        #{userid},
        #{liveTypeId}
        )ON DUPLICATE KEY UPDATE `live_type_id`=#{liveTypeId}
    </insert>

    <update id="update" parameterType="com.hooview.api.entity.LiveTypeUserEntity">
        update tb_live_type_user
        <set>
            <if test="liveTypeId != null">`live_type_id` = #{liveTypeId}</if>
        </set>
        where user_id = #{userid}
    </update>

    <delete id="delete">
        delete from tb_live_type_user where id = #{value}
    </delete>

    <delete id="deleteBatch">
        delete from tb_live_type_user where user_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>