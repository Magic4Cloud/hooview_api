<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hooview.api.dao.BrowseHistoryDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.hooview.api.entity.BrowseHistoryEntity" id="browseHistoryMap">
        <result property="browseHistoryId" column="browse_history_id"/>
        <result property="userId" column="user_id"/>
        <result property="sourceId" column="source_id"/>
        <result property="sourceType" column="source_type"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

	<select id="queryObject" resultType="com.hooview.api.entity.BrowseHistoryEntity">
		select * from tb_browse_history where browse_history_id = #{value}
	</select>

	<select id="queryList" resultType="com.hooview.api.entity.BrowseHistoryEntity">
		select * from tb_browse_history WHERE user_id = #{userId}
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by browse_history_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryHistoryList" resultType="com.hooview.api.dto.HistoryDTO">
		SELECT tbs.browse_history_id,tbs.source_id,tbs.source_type,tbs.create_time,l.room_id,
		IFNULL(l.live_title, fi.title) AS title,l.vid,lt.type_name AS live_type_name,
		IFNULL(l.logourl, fi.cover_pic) AS logourl,IFNULL(lu.nickname, fu.nickname) AS nickname,
		IFNULL(l.live_status, 0) AS live_status
		FROM tb_browse_history tbs
		LEFT JOIN tb_live l ON tbs.source_id = l.live_id AND tbs.source_type = 0
		LEFT JOIN tb_live_type lt ON l.live_type_id = lt.live_type_id
		LEFT JOIN sys_user lu ON l.user_id = lu.user_id
		LEFT JOIN tb_finance_info fi ON tbs.source_id = fi.finance_info_id AND tbs.source_type = 1
		LEFT JOIN sys_user fu ON fu.user_id = fi.create_user_id
		WHERE  tbs.user_id = #{userId}
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by create_time desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from tb_browse_history  WHERE user_id = #{userId}
	</select>
	 
	<insert id="save" parameterType="com.hooview.api.entity.BrowseHistoryEntity" useGeneratedKeys="true" keyProperty="browseHistoryId">
		insert into tb_browse_history
		(
			`user_id`, 
			`source_id`, 
			`source_type`, 
			`create_time`
		)
		values
		(
			#{userId}, 
			#{sourceId}, 
			#{sourceType}, 
			#{createTime}
		)ON DUPLICATE KEY UPDATE `create_time`=#{createTime}
	</insert>
	 
	<update id="update" parameterType="com.hooview.api.entity.BrowseHistoryEntity">
		update tb_browse_history 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="sourceId != null">`source_id` = #{sourceId}, </if>
			<if test="sourceType != null">`source_type` = #{sourceType}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where browse_history_id = #{browseHistoryId}
	</update>
	
	<delete id="delete">
		delete from tb_browse_history where browse_history_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from tb_browse_history where browse_history_id in 
		<foreach item="browseHistoryId" collection="array" open="(" separator="," close=")">
			#{browseHistoryId}
		</foreach>
	</delete>

	<delete id="deleteBrowseHistory" parameterType="com.hooview.api.entity.BrowseHistoryEntity">
		delete from tb_browse_history where user_id = #{userId}
	</delete>

	<delete id="deleteSource">
		delete from tb_browse_history where source_type=#{sourceType} AND source_id in
		<foreach item="sourceId" collection="sourceIds" open="(" separator="," close=")">
			#{sourceId}
		</foreach>

	</delete>

</mapper>