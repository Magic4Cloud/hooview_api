<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hooview.api.dao.MsgDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.hooview.api.entity.MsgEntity" id="msgMap">
        <result property="msgId" column="msg_id"/>
        <result property="fromUserId" column="from_user_id"/>
        <result property="toUserId" column="to_user_id"/>
        <result property="sourceId" column="source_id"/>
        <result property="sourceType" column="source_type"/>
        <result property="msgContent" column="msg_content"/>
        <result property="createTime" column="create_time"/>
        <result property="read" column="read"/>
    </resultMap>

	<select id="queryObject" resultType="com.hooview.api.entity.MsgEntity">
		select * from tb_msg where msg_id = #{value}
	</select>

	<select id="queryList" resultType="com.hooview.api.entity.MsgEntity">
		select * from tb_msg
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by msg_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryMyList" resultType="com.hooview.api.dto.MsgDTO">
		SELECT
		m.msg_id,
		m.msg_content,
		m.source_id,
		m.source_type,
		m.create_time,
		l.room_id,
		IFNULL(l.live_title, fi.title) AS title,
		l.vid,
		l.watching_count,
		lt.type_name AS live_type_name,
		l.logourl,
		u.nickname,
		u.head_url,
		IFNULL(l.live_status, 0) AS live_status
		FROM
		tb_msg m
		LEFT JOIN tb_live l ON m.source_id = l.live_id
		AND m.source_type = 0
		LEFT JOIN tb_live_type lt ON l.live_type_id = lt.live_type_id
		LEFT JOIN tb_finance_info fi ON m.source_id = fi.finance_info_id
		AND m.source_type = 1
		LEFT JOIN tb_info_comment ic ON ic.info_comment_id=m.source_id
		AND m.source_type=2
		JOIN sys_user u
		WHERE
		u.user_id = m.from_user_id
		AND m.to_user_id = #{userId}
		ORDER BY
		create_time DESC
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryMyTotal" resultType="int">
		select count(*) from tb_msg where to_user_id=#{userId}
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from tb_msg 
	</select>
	 
	<insert id="save" parameterType="com.hooview.api.entity.MsgEntity" useGeneratedKeys="true" keyProperty="msgId">
		insert into tb_msg
		(
			`from_user_id`, 
			`to_user_id`, 
			`source_id`, 
			`source_type`, 
			`msg_content`, 
			`create_time`, 
			`read`
		)
		values
		(
			#{fromUserId}, 
			#{toUserId}, 
			#{sourceId}, 
			#{sourceType}, 
			#{msgContent}, 
			#{createTime}, 
			#{read}
		)
	</insert>
	 
	<update id="update" parameterType="com.hooview.api.entity.MsgEntity">
		update tb_msg 
		<set>
			<if test="fromUserId != null">`from_user_id` = #{fromUserId}, </if>
			<if test="toUserId != null">`to_user_id` = #{toUserId}, </if>
			<if test="sourceId != null">`source_id` = #{sourceId}, </if>
			<if test="sourceType != null">`source_type` = #{sourceType}, </if>
			<if test="msgContent != null">`msg_content` = #{msgContent}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="read != null">`read` = #{read}</if>
		</set>
		where msg_id = #{msgId}
	</update>
	
	<delete id="delete">
		delete from tb_msg where msg_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from tb_msg where msg_id in 
		<foreach item="msgId" collection="array" open="(" separator="," close=")">
			#{msgId}
		</foreach>
	</delete>

	<delete id="deleteMyBatch" parameterType="com.hooview.api.entity.MsgEntity">
		<!--delete from tb_msg where to_user_id = #{userId} and msg_id in-->
		<!--<foreach item="msgId" collection="msgIds" open="(" separator="," close=")">-->
			<!--#{msgId}-->
		<!--</foreach>-->
		delete from tb_msg where to_user_id = #{toUserId}
	</delete>

</mapper>