<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hooview.api.dao.OpinionDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.hooview.api.entity.OpinionEntity" id="opinionMap">
        <result property="opinionId" column="opinion_id"/>
        <result property="userId" column="user_id"/>
        <result property="opinionContent" column="opinion_content"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

	<select id="queryObject" resultType="com.hooview.api.entity.OpinionEntity">
		select * from tb_opinion where opinion_id = #{value}
	</select>

	<select id="queryList" resultType="com.hooview.api.entity.OpinionEntity">
		select * from tb_opinion
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by opinion_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryByList" resultType="com.hooview.api.dto.OpinionDTO">
		SELECT DATE_FORMAT(p.create_time,'%Y-%m-%d %H:%i:%S') as create_time,
		p.opinion_content,p.opinion_id,p.`status`,u.nickname
		FROM tb_opinion p,sys_user u WHERE p.user_id=u.user_id
		ORDER BY `status`,create_time DESC
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from tb_opinion p,sys_user u WHERE p.user_id=u.user_id
	</select>
	 
	<insert id="save" parameterType="com.hooview.api.entity.OpinionEntity" useGeneratedKeys="true" keyProperty="opinionId">
		insert into tb_opinion
		(
			`user_id`, 
			`opinion_content`, 
			`create_time`,
			`status`
		)
		values
		(
			#{userId}, 
			#{opinionContent}, 
			now(),
			0
		)
	</insert>
	 
	<update id="update" parameterType="com.hooview.api.entity.OpinionEntity">
		update tb_opinion set status=1
		where opinion_id = #{opinionId}
	</update>
	
	<delete id="delete">
		delete from tb_opinion where opinion_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from tb_opinion where opinion_id in 
		<foreach item="opinionId" collection="array" open="(" separator="," close=")">
			#{opinionId}
		</foreach>
	</delete>

</mapper>